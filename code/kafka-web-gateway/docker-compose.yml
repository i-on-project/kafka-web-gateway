version: "3.9"

services:
  db-g06-tests:
    container_name: db-g06-tests
    hostname: db-g06-tests
    build:
      context: .
      dockerfile: docker/gateway/Dockerfile-db-test
    environment:
      - POSTGRES_USER=gateway_user
      - POSTGRES_PASSWORD=gateway_password
      - POSTGRES_DB=gateway_db
    ports:
      - "5432:5432"

  spring-service-1:
    container_name: spring-service-1
    hostname: spring-service-1
    build:
      context: .
      dockerfile: docker/gateway/Dockerfile-spring
    environment:
      PORT: 8081
      KAFKA-SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      POSTGRES-URL: "jdbc:postgresql://db-g06-tests:5432/gateway_db"
      POSTGRES-USER: "gateway_user"
      POSTGRES-PWD: "gateway_password"
      OWNER-NAME: "owner"
      OWNER-TOKEN: "348fd1e9-d401-4f4a-b4ab-917297d522c7"
      AUTH-SERVER-URI: "http://host.docker.internal:8089/authenticate"
    ports:
      - "8081:8081"
    depends_on:
      - db-g06-tests
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  spring-service-2:
    container_name: spring-service-2
    hostname: spring-service-2
    build:
      context: .
      dockerfile: docker/gateway/Dockerfile-spring
    environment:
      PORT: 8082
      KAFKA-SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      POSTGRES-URL: "jdbc:postgresql://db-g06-tests:5432/gateway_db"
      POSTGRES-USER: "gateway_user"
      POSTGRES-PWD: "gateway_password"
      OWNER-NAME: "owner"
      OWNER-TOKEN: "348fd1e9-d401-4f4a-b4ab-917297d522c7"
      AUTH-SERVER-URI: "http://host.docker.internal:8089/authenticate"
    ports:
      - "8082:8082"
    depends_on:
      - db-g06-tests
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  zookeeper-1:
    container_name: zookeeper-1
    hostname: zookeeper-1
    image: bitnami/zookeeper:3.8
    ports:
      - '21811:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=0.0.0.0:2888:3888,zookeeper-2:2888:3888,zookeeper-3:2888:3888
  zookeeper-2:
    container_name: zookeeper-2
    hostname: zookeeper-2
    image: bitnami/zookeeper:3.8
    ports:
      - '21812:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=2
      - ZOO_SERVERS=zookeeper-1:2888:3888,0.0.0.0:2888:3888,zookeeper-3:2888:3888
  zookeeper-3:
    container_name: zookeeper-3
    hostname: zookeeper-3
    image: bitnami/zookeeper:3.8
    ports:
      - '21813:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=3
      - ZOO_SERVERS=zookeeper-1:2888:3888,zookeeper-2:2888:3888,0.0.0.0:2888:3888

  kafka-1:
    image: 'bitnami/kafka:3.4'
    ports:
      - '29092:29092'
    environment:
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT - ALREADY DEFAULT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  kafka-2:
    image: 'bitnami/kafka:3.4'
    ports:
      - '39092:39092'
    environment:
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT - ALREADY DEFAULT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:39092
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  kafka-3:
    image: 'bitnami/kafka:3.4'
    ports:
      - '49092:49092'
    environment:
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT - ALREADY DEFAULT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9092,PLAINTEXT_HOST://localhost:49092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:49092
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  # The service running the load-balancer
  nginx:
    container_name: nginx
    image: nginx
    ports:
      - "8080:8080"
      - "8088:8088"
    volumes:
      - ./docker/gateway/nginx:/etc/nginx
    depends_on:
      - spring-service-1
      - spring-service-2